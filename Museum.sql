DROP TABLE PART;
DROP TABLE EXCUR;
DROP TABLE EXH;
DROP TABLE CUST;
DROP TABLE HALL;
DROP TABLE GUIDE;
DROP TABLE CRT;
DROP TABLE SUPP;





CREATE TABLE GUIDE(GUIDENO NUMBER(4) PRIMARY KEY,
GNAME VARCHAR2(10),
GSUR VARCHAR2(10),
SALARY NUMBER(4),
PHONE NUMBER(8));

CREATE TABLE HALL(HALLNO NUMBER(4) PRIMARY KEY,
HNUM NUMBER(4),
FLOOR NUMBER(1));

CREATE TABLE EXCUR(EXCURNO NUMBER(4) PRIMARY KEY,
PRICE NUMBER(3),
DATE1 DATE,
DATE2 DATE,
GR_SIZE NUMBER(10),
GUIDEID INT,
HALLID INT,
CONSTRAINT FK_GUID_EXC  FOREIGN KEY (GUIDEID) REFERENCES GUIDE(GUIDENO),
CONSTRAINT FK_HALL_EXC FOREIGN KEY (HALLID) REFERENCES HALL(HALLNO));


CREATE TABLE CRT(CRTNO NUMBER(4) PRIMARY KEY,
CRTNAME VARCHAR2(10),
CRTSUR VARCHAR2(10),
CRTOCUP VARCHAR2(10));

CREATE TABLE SUPP(SUPPNO NUMBER(4) PRIMARY KEY,
SNAME VARCHAR2(10),
SSUR VARCHAR2(10),
SPHONE NUMBER(8),
STYPE VARCHAR2(8));

CREATE TABLE EXH(EXHNO NUMBER(4) PRIMARY KEY,
ENAME VARCHAR(30),
DATE1 INT,
CATEG VARCHAR(10),
HALLID INT,
CRTID INT,
SUPPID INT,
CONSTRAINT FK_HALL_EXH FOREIGN KEY (HALLID) REFERENCES HALL(HALLNO),
CONSTRAINT FK_CRT_EXH FOREIGN KEY (CRTID) REFERENCES CRT(CRTNO),
CONSTRAINT FK_SUPP_EXH FOREIGN KEY (SUPPID) REFERENCES SUPP(SUPPNO));

CREATE TABLE CUST(CUSTNO NUMBER(4) PRIMARY KEY,
CNAME VARCHAR2(10),
CSURN VARCHAR2(10));

CREATE TABLE PART(PARTNO NUMBER(4) PRIMARY KEY,
CUSTID INT,
EXCURID INT,
CONSTRAINT FK_CUST_PART FOREIGN KEY (CUSTID) REFERENCES CUST(CUSTNO),
CONSTRAINT FK_EXCUR_PART FOREIGN KEY (EXCURID) REFERENCES EXCUR(EXCURNO));


INSERT INTO CUST VALUES
(0001, 'PIERCE','BROSNAN');
INSERT INTO CUST VALUES
(0002, 'ZACHARY','QUINTO');
INSERT INTO CUST VALUES
(0003, 'MICHELLE','RODRIGUEZ');

INSERT INTO GUIDE VALUES
(0001, 'OLIVER','CROMWELL',2200,12345678);
INSERT INTO GUIDE VALUES
(0002, 'JACK','MOORE',2400,12345438);
INSERT INTO GUIDE VALUES
(0003, 'EMILY','PARKER',2400,12312378);

INSERT INTO SUPP VALUES
(0001, 'BRIAN','ANDERSON',5345345,'DONATOR');
INSERT INTO SUPP VALUES
(0002, 'FRASER','BLACKHURST',3456544,'SELLER');
INSERT INTO SUPP VALUES
(0003, 'KAREN','CLARK',2434324,'DONATOR');

INSERT INTO CRT VALUES
(0001, 'RICHARD','CATW','ARTIST');
INSERT INTO CRT VALUES
(0002, 'PAUL','MAUSER','MANUFAC');
INSERT INTO CRT VALUES
(0003, 'JOSEPH','JOFFRE','OFFICER');

INSERT INTO HALL VALUES
(0001, 0001, 1);
INSERT INTO HALL VALUES
(0002, 0002, 2);
INSERT INTO HALL VALUES
(0003, 0003, 1);

INSERT INTO EXH VALUES
(0001, 'CHARGE OF THE LIGHT BRIDGE',
1894, 'ART', 0001, 0001, 0001);
INSERT INTO EXH VALUES
(0002, 'Mauser Model 1871',
1871, 'WEAPONS', 0001, 0002, 0002);
INSERT INTO EXH VALUES
(0003, 'Plan XVII',
1894, 'BATTLEPLAN', 0002, 0001, 0003);

INSERT INTO EXCUR VALUES
(0001, 200,TO_TIMESTAMP('2021-01-12 11:10:00','yyyy/mm/dd hh24:mi:ss'),
TO_TIMESTAMP('2021-01-12 11:10:00','yyyy/mm/dd hh24:mi:ss'),
1,0001,0001);
INSERT INTO EXCUR VALUES
(0002, 200,TO_TIMESTAMP('2021-01-12 11:10:00','yyyy/mm/dd hh24:mi:ss'),
TO_TIMESTAMP('2021-01-12 11:10:00','yyyy/mm/dd hh24:mi:ss'),
2,0002,0002);

INSERT INTO PART VALUES
(0001,0001,0001);
INSERT INTO PART VALUES
(0002,0002,0002);
INSERT INTO PART VALUES
(0003,0003,0002);

-- ------------------------------------------------------------------------

SET SERVEROUTPUT ON

-- GENERATION OF NEW CUSTNO FOR NEW INSERTS


CREATE OR REPLACE TRIGGER NEW_CUST_ID
BEFORE INSERT
ON CUST
FOR EACH ROW
BEGIN
SELECT NVL(MAX(CUSTNO)+1,0001)
INTO :NEW.CUSTNO
FROM CUST;
END;
/

INSERT INTO CUST (CNAME,CSURN) VALUES
('THEMAN','GREEN');

SELECT * FROM CUST;
-- --------------------------------------------

-- GENERATION OF NEW GUIDENO FOR NEW INSERTS

CREATE OR REPLACE TRIGGER NEW_GUIDE_ID
BEFORE INSERT
ON GUIDE
FOR EACH ROW
BEGIN
SELECT NVL(MAX(GUIDENO)+1,0001)
INTO :NEW.GUIDENO
FROM GUIDE;
END;
/

INSERT INTO GUIDE (GNAME,GSUR,SALARY,PHONE) VALUES
('JACOB','SCOTT',2000,2328549);

SELECT * FROM GUIDE;
-- --------------------------------------------


-- GENERATION OF NEW SUPPNO FOR NEW INSERTS

CREATE OR REPLACE TRIGGER NEW_SUPP_ID
BEFORE INSERT
ON SUPP
FOR EACH ROW
BEGIN
SELECT NVL(MAX(SUPPNO)+1,0001)
INTO :NEW.SUPPNO
FROM SUPP;
END;
/

INSERT INTO SUPP (SNAME,SSUR,SPHONE,STYPE) VALUES
( 'TINA','LIU',7656543,'DONATOR');

SELECT * FROM SUPP;
-- --------------------------------------------

-- GENERATION OF NEW CRTNO FOR NEW INSERTS

CREATE OR REPLACE TRIGGER NEW_CRT_ID
BEFORE INSERT
ON CRT
FOR EACH ROW
BEGIN
SELECT NVL(MAX(CRTNO)+1,0001)
INTO :NEW.CRTNO
FROM CRT;
END;
/

INSERT INTO CRT (CRTNAME,CRTSUR,CRTOCUP) VALUES
('ALFRED VON','SCHILIEFEN','OFFICER');

SELECT * FROM CRT;
-- --------------------------------------------

-- GENERATION OF NEW HALLNO FOR NEW INSERTS

CREATE OR REPLACE TRIGGER NEW_HALL_ID
BEFORE INSERT
ON HALL
FOR EACH ROW
BEGIN
SELECT NVL(MAX(HALLNO)+1,0001)
INTO :NEW.HALLNO
FROM HALL;
END;
/

INSERT INTO HALL (HNUM,FLOOR) VALUES
(0004, 2);

SELECT * FROM HALL;
-- --------------------------------------------


-- GENERATION OF NEW EXHNO FOR NEW INSERTS

CREATE OR REPLACE TRIGGER NEW_EXH_ID
BEFORE INSERT
ON EXH
FOR EACH ROW
BEGIN
SELECT NVL(MAX(EXHNO)+1,0001)
INTO :NEW.EXHNO
FROM EXH;
END;
/

INSERT INTO EXH (ENAME,DATE1,CATEG,HALLID,CRTID,SUPPID) VALUES
('SCHILIEFFEN PLAN',
1914, 'BATTLEPLAN', 0001, 0004, 0003);

SELECT * FROM HALL;
-- --------------------------------------------


-- GENERATION OF NEW EXCURNO FOR NEW INSERTS

CREATE OR REPLACE TRIGGER NEW_EXCUR_ID
BEFORE INSERT
ON EXCUR
FOR EACH ROW
BEGIN
SELECT NVL(MAX(EXCURNO)+1,0001)
INTO :NEW.EXCURNO
FROM EXCUR;
END;
/

--  -   -   -   -   -   -   -   -   -   -   -   -   -   -

-- GENERATION OF NEW DATE1 FOR NEW INSERTS
CREATE OR REPLACE TRIGGER NEW_EXCUR_DATE1
BEFORE INSERT
ON EXCUR
FOR EACH ROW
BEGIN
:NEW.DATE1:=SYSDATE;
END;
/
--  -   -   -   -   -   -   -   -   -   -   -   -   -   -

-- GENERATION OF NEW DATE2 FOR NEW INSERTS
CREATE OR REPLACE TRIGGER NEW_EXCUR_DATE2
BEFORE INSERT
ON EXCUR
FOR EACH ROW
BEGIN
:NEW.DATE2:=SYSDATE+INTERVAL '1' HOUR;
END;
/

INSERT INTO EXCUR (PRICE,GR_SIZE,GUIDEID,HALLID) VALUES
( 300,1,0003,0001);

SELECT * FROM EXCUR;
-- --------------------------------------------



-- GENERATION OF NEW PARTNO FOR NEW INSERTS

CREATE OR REPLACE TRIGGER NEW_PART_ID
BEFORE INSERT
ON PART
FOR EACH ROW
BEGIN
SELECT NVL(MAX(PARTNO)+1,0001)
INTO :NEW.PARTNO
FROM PART;
END;
/

INSERT INTO PART(CUSTID,EXCURID) VALUES
(0004,0002);

SELECT * FROM PART;
-- --------------------------------------------

-- INFORMS ABOUT DELETION

CREATE OR REPLACE TRIGGER DEL_INFO
AFTER DELETE
ON CUST
FOR EACH ROW
BEGIN
DBMS_OUTPUT.PUT_LINE('CUSTOMER DELTETED');
END;
/
-- --------------------------------------------

-- INFORMS ABOUT UPDATE

CREATE OR REPLACE TRIGGER UPDATE_INFO
AFTER DELETE
ON CUST
FOR EACH ROW
BEGIN
DBMS_OUTPUT.PUT_LINE('CUSTOMER UPDATED');
END;
/
-- --------------------------------------------

-- LIMITS TO THE THIRD FLOOR FOR HALLS

CREATE OR REPLACE TRIGGER LIM_FLOOR
BEFORE UPDATE
ON HALL
FOR EACH ROW
BEGIN
IF :NEW.FLOOR>3
THEN
:NEW.FLOOR:=:OLD.FLOOR;
RAISE_APPLICATION_ERROR(-20003, 'THERES NO FLOOR HIGHER THAN 3');
END IF;
END;
/


-- COUNTS NUMBER OF CUSTOMERS AFTER EVERY INSERT ON CUSTEMERS
CREATE OR REPLACE TRIGGER COUNTER
AFTER INSERT
ON CUST
DECLARE X INTEGER;
BEGIN
SELECT COUNT(CUSTNO) INTO X FROM CUST;
DBMS_OUTPUT.PUT_LINE(X);
END;
/
INSERT INTO CUST (CNAME,CSURN) VALUES
('THEMAN','GREEN');
-- --------------------------------------------

-- SEARCHES AND SHOWS CUSTOMERS BY THEIR ID
SELECT CUSTNO,CNAME,CSURN
FROM CUST
WHERE CUSTNO='0001';

-- SHOWS NUMBER OF CUSTOMERS IN THE DATABASE
SELECT COUNT(CUSTNO)
FROM CUST;

-- SHOWS ALL GUIDES THAT HAS HIGHER SAL THAN 2200
SELECT *
FROM GUIDE
WHERE SALARY>2200;

-- SHOWS HIGHEST SALARY EARNED BY GUIDES
SELECT MAX(SALARY)
FROM GUIDE;

-- SHOWS ANNUAL SALARY
SELECT GNAME,GSUR,SALARY*12 AS "SALARY PER YEAR"
FROM GUIDE;

-- SHOWS ALL SUPPLIERS THAT DONATED
SELECT *
FROM SUPP
WHERE STYPE='DONATOR';

-- SHOW EVERYONE REGISTERED IN DATABASE
SELECT CNAME,CSURN
FROM CUST
UNION
SELECT GNAME,GSUR
FROM GUIDE
UNION
SELECT SNAME,SSUR
FROM SUPP;

-- SHOWS ALL CUSTOMERS WHO ARE SIGNED UP FOR EXCURSION
SELECT *
FROM CUST
WHERE CUSTNO IN (SELECT CUSTID
FROM PART);

-- SHOWS OLDEST EXHIBIT
SELECT ENAME
FROM EXH
WHERE DATE1=( SELECT MIN(DATE1)
FROM EXH);

-- SHOWS GUIDE THAT HAS HIGHER SALARY THAN SUM OF ALL EXCURSION INCOME OF A GIVEN GUIDE
SELECT GNAME
FROM GUIDE G
WHERE G.SALARY > (SELECT SUM(PRICE)
                  FROM EXCUR E
                  WHERE G.GUIDENO = E.GUIDEID);
                  
                
